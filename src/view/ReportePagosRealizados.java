/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view;

import com.toedter.calendar.IDateEditor;
import com.toedter.calendar.JTextFieldDateEditor;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import services.SimpleExcelWriter;
import view.util.CustomMessages;

/**
 *
 * @author eobregon
 */
public class ReportePagosRealizados extends javax.swing.JPanel {

    /**
     * Creates new form ReportePagosRealizados
     */
    private boolean loadingInfo = false;
    ArrayList<entitys.Pagos> listaPagos;

    public ReportePagosRealizados() {
        initComponents();
        prepareGui();
    }

    private void prepareGui() {
        prepareListeners();
        setView();
    }

    private void setView() {
        setDateChooserBackground();
        DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();
        rightRenderer.setHorizontalAlignment(SwingConstants.RIGHT);
        tbPagos.getColumnModel().getColumn(10).setCellRenderer(rightRenderer);
        tbPagos.getColumnModel().getColumn(11).setCellRenderer(rightRenderer);
        tbPagos.getColumnModel().getColumn(12).setCellRenderer(rightRenderer);
        tbPagos.getColumnModel().getColumn(13).setCellRenderer(rightRenderer);
        tbPagos.getColumnModel().getColumn(14).setCellRenderer(rightRenderer);
    }

    private void prepareListeners() {
        this.txtDoc.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                System.out.println("Enter key pressed: " + txtDoc.getText());
                buscarDoc();
            }
        });
    }

    private void setDateChooserBackground() {
        IDateEditor dateEditor = dtInicio.getDateEditor();
        if (dateEditor instanceof JTextFieldDateEditor) {
            JTextFieldDateEditor txtFld = (JTextFieldDateEditor) dateEditor;
            txtFld.setBackground(Color.WHITE);

        }
        dateEditor = dtFin.getDateEditor();
        if (dateEditor instanceof JTextFieldDateEditor) {
            JTextFieldDateEditor txtFld = (JTextFieldDateEditor) dateEditor;
            txtFld.setBackground(Color.WHITE);

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbPagos = new javax.swing.JTable();
        jPanel14 = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txtDoc = new javax.swing.JTextField();
        btnSerchDocNum = new javax.swing.JButton();
        btnExpExcell = new javax.swing.JButton();
        jPanel15 = new javax.swing.JPanel();
        lbTbInfo = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jProgressBar1 = new javax.swing.JProgressBar();
        jPanel8 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        dtInicio = new com.toedter.calendar.JDateChooser();
        jPanel12 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        dtFin = new com.toedter.calendar.JDateChooser();
        jPanel10 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        cmbCia = new javax.swing.JComboBox<>();
        jPanel19 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        cmbProv = new javax.swing.JComboBox<>();
        jPanel18 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        cmbMoneda = new javax.swing.JComboBox<>();
        jPanel17 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();

        setLayout(new java.awt.BorderLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(204, 204, 204)), "Tabla pagos aplicados", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N
        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel13.setLayout(new java.awt.GridLayout(1, 0));

        tbPagos.setAutoCreateRowSorter(true);
        tbPagos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sociedad", "Id", "Fecha", "Documento", "Numero proveedor", "Proveedor", "Fecha de creación", "Tipo debito", "Tipo crédito", "Moneda", "M debito", "M proveedor", "M local", "M dolar", "M crédito"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbPagos.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tbPagos.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tbPagos);
        if (tbPagos.getColumnModel().getColumnCount() > 0) {
            tbPagos.getColumnModel().getColumn(1).setMinWidth(0);
            tbPagos.getColumnModel().getColumn(1).setPreferredWidth(0);
            tbPagos.getColumnModel().getColumn(1).setMaxWidth(0);
            tbPagos.getColumnModel().getColumn(4).setMinWidth(0);
            tbPagos.getColumnModel().getColumn(4).setPreferredWidth(0);
            tbPagos.getColumnModel().getColumn(4).setMaxWidth(0);
            tbPagos.getColumnModel().getColumn(5).setPreferredWidth(300);
            tbPagos.getColumnModel().getColumn(6).setMinWidth(0);
            tbPagos.getColumnModel().getColumn(6).setPreferredWidth(0);
            tbPagos.getColumnModel().getColumn(6).setMaxWidth(0);
        }

        jPanel13.add(jScrollPane1);

        jPanel1.add(jPanel13, java.awt.BorderLayout.CENTER);

        jPanel14.setPreferredSize(new java.awt.Dimension(882, 30));
        jPanel14.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jPanel16.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setText("Documento #");
        jPanel16.add(jLabel4);

        txtDoc.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtDoc.setPreferredSize(new java.awt.Dimension(150, 25));
        jPanel16.add(txtDoc);

        btnSerchDocNum.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/search_icon_all_20x20.png"))); // NOI18N
        btnSerchDocNum.setToolTipText("Buscar documento");
        btnSerchDocNum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSerchDocNumActionPerformed(evt);
            }
        });
        jPanel16.add(btnSerchDocNum);

        jPanel14.add(jPanel16);

        btnExpExcell.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/excel_icon_20x20.png"))); // NOI18N
        btnExpExcell.setToolTipText("Exportar a excel");
        btnExpExcell.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExpExcellActionPerformed(evt);
            }
        });
        jPanel14.add(btnExpExcell);

        jPanel1.add(jPanel14, java.awt.BorderLayout.PAGE_START);

        jPanel15.setPreferredSize(new java.awt.Dimension(882, 25));
        jPanel15.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        lbTbInfo.setText("Filas: 0");
        jPanel15.add(lbTbInfo);

        jPanel1.add(jPanel15, java.awt.BorderLayout.PAGE_END);

        add(jPanel1, java.awt.BorderLayout.CENTER);

        jPanel2.setPreferredSize(new java.awt.Dimension(922, 120));
        jPanel2.setLayout(new java.awt.BorderLayout(0, 3));

        jPanel6.setMinimumSize(new java.awt.Dimension(600, 10));
        jPanel6.setPreferredSize(new java.awt.Dimension(600, 10));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 938, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );

        jPanel2.add(jPanel6, java.awt.BorderLayout.SOUTH);

        jPanel7.setPreferredSize(new java.awt.Dimension(922, 20));
        jPanel7.setLayout(new java.awt.GridLayout(1, 0));

        jProgressBar1.setOpaque(true);
        jProgressBar1.setStringPainted(true);
        jPanel7.add(jProgressBar1);

        jPanel2.add(jPanel7, java.awt.BorderLayout.NORTH);

        jPanel8.setPreferredSize(new java.awt.Dimension(922, 60));
        jPanel8.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jPanel11.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setText("Inicio");
        jPanel11.add(jLabel1);

        dtInicio.setDateFormatString("dd-MM-yyyy");
        jPanel11.add(dtInicio);

        jPanel9.add(jPanel11);

        jPanel12.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 5, 0));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("hasta");
        jPanel12.add(jLabel3);

        dtFin.setDateFormatString("dd-MM-yyyy");
        dtFin.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                dtFinPropertyChange(evt);
            }
        });
        jPanel12.add(dtFin);

        jPanel9.add(jPanel12);

        jPanel8.add(jPanel9);

        jPanel10.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("Sociedad");
        jPanel10.add(jLabel2);

        cmbCia.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todos", "CILT", "TURINTEL", "RIMSA", "IRASA", "KATRASA", "OPYLOG" }));
        cmbCia.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbCiaItemStateChanged(evt);
            }
        });
        jPanel10.add(cmbCia);

        jPanel8.add(jPanel10);

        jPanel19.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setText("Proveedor");
        jPanel19.add(jLabel6);

        cmbProv.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todos", "prov-000078", "prov.jj-89", "provbjncjwce-90887" }));
        cmbProv.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbProvItemStateChanged(evt);
            }
        });
        jPanel19.add(cmbProv);

        jPanel8.add(jPanel19);

        jPanel18.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setText("Moneda");
        jPanel18.add(jLabel5);

        cmbMoneda.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todas", "CRC", "USD" }));
        cmbMoneda.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbMonedaItemStateChanged(evt);
            }
        });
        jPanel18.add(cmbMoneda);

        jPanel17.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/updateIcon.png"))); // NOI18N
        jButton2.setToolTipText("Refrescar");
        jButton2.setPreferredSize(new java.awt.Dimension(27, 27));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel17.add(jButton2);

        jPanel18.add(jPanel17);

        jPanel8.add(jPanel18);

        jPanel2.add(jPanel8, java.awt.BorderLayout.CENTER);

        add(jPanel2, java.awt.BorderLayout.PAGE_START);

        jPanel3.setPreferredSize(new java.awt.Dimension(922, 10));
        jPanel3.setRequestFocusEnabled(false);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 938, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );

        add(jPanel3, java.awt.BorderLayout.PAGE_END);

        jPanel4.setPreferredSize(new java.awt.Dimension(20, 237));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 446, Short.MAX_VALUE)
        );

        add(jPanel4, java.awt.BorderLayout.LINE_END);

        jPanel5.setPreferredSize(new java.awt.Dimension(20, 237));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 446, Short.MAX_VALUE)
        );

        add(jPanel5, java.awt.BorderLayout.LINE_START);
    }// </editor-fold>//GEN-END:initComponents

    private void dtFinPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_dtFinPropertyChange
        // TODO add your handling code here:
        if (evt.getPropertyName().contains("date")) {
            refreshAsyncInfo();
        }
    }//GEN-LAST:event_dtFinPropertyChange

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        refreshAsyncInfo();

    }//GEN-LAST:event_jButton2ActionPerformed

    private void cmbCiaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbCiaItemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange() == evt.SELECTED && !loadingInfo) {
            loadingInfo = true;
            refreshAsyncInfo();
        }
    }//GEN-LAST:event_cmbCiaItemStateChanged

    private void cmbProvItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbProvItemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange() == evt.SELECTED && !loadingInfo) {
            loadingInfo = true;
            loadAsyncInfo();
        }
    }//GEN-LAST:event_cmbProvItemStateChanged

    private void cmbMonedaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbMonedaItemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange() == evt.SELECTED && !loadingInfo) {
            loadingInfo = true;
            loadAsyncInfo();
        }
    }//GEN-LAST:event_cmbMonedaItemStateChanged

    private void btnExpExcellActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExpExcellActionPerformed
        // TODO add your handling code here:
        Thread t = new Thread(new Runnable() {
            @Override
            public void run() {
                setCursor(new Cursor(Cursor.WAIT_CURSOR));
                loadingInfo = true;
                guardarExcel();
                loadingInfo = false;
                setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
            }
        });
        t.start();
    }//GEN-LAST:event_btnExpExcellActionPerformed

    private void btnSerchDocNumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSerchDocNumActionPerformed
        // TODO add your handling code here:
        buscarDoc();

    }//GEN-LAST:event_btnSerchDocNumActionPerformed
    private void buscarDoc() {
        view.util.JTableCommonFunctions.limpiarTabla(tbPagos);
        String doc = txtDoc.getText();
        ArrayList<entitys.Pagos> lista = entitys.Pagos.getPagosPorDoc(doc, this.listaPagos);
        DefaultTableModel model = (DefaultTableModel) tbPagos.getModel();
        lista.forEach(e -> {
            addRow(model, e);
        });
        this.lbTbInfo.setText("Filas: " + tbPagos.getRowCount());
    }

    private void guardarExcel() {
        this.jProgressBar1.setString("Guardando excel...");
        this.jProgressBar1.setVisible(true);
        SimpleExcelWriter sew = new SimpleExcelWriter();
        //sew.writeToExcell(this.tbConciliacionMarcas);

        boolean saved = sew.writeJtableExcelFile(tbPagos, "Reporte");
        if (saved) {
            this.jProgressBar1.setString("Excel guardadado correctamente");
            CustomMessages.showTemporalProgessBar(jProgressBar1, 3000);
        } else {
            this.jProgressBar1.setString("Proceso cancelado");
            //this.jpbLoading.setVisible(false);
            CustomMessages.showTemporalProgessBar(jProgressBar1, 3000);
        }
    }

    private void refreshAsyncInfo() {
        Runnable r = new Runnable() {
            @Override
            public void run() {
                loadingInfo = true;
                txtDoc.setText("");
                jProgressBar1.setVisible(true);
                jProgressBar1.setString("Cargando...");
                java.util.Date inicio = dtInicio.getDate();
                java.util.Date fin = dtFin.getDate();
                //cmbCia.setSelectedIndex(0);
                cmbMoneda.setSelectedIndex(0);
                cmbProv.setSelectedIndex(0);
                setCursor(new Cursor(Cursor.WAIT_CURSOR));
                view.util.JTableCommonFunctions.limpiarTabla(tbPagos);
                data.CrudPagos crd = new data.CrudPagos();
                listaPagos = crd.obtPagosPorFechas(inicio, fin, cmbCia.getSelectedIndex(), "", "", "");
                DefaultTableModel model = (DefaultTableModel) tbPagos.getModel();
                cmbProv.removeAllItems();
                ArrayList<String> listProv = new ArrayList<String>();
                listProv.add("Todos");
                listaPagos.forEach(e -> {
                    addRow(model, e);
                    if (!listProv.contains(e.getNombreProveedor() + "-" + e.getProveedor())) {
                        listProv.add(e.getNombreProveedor() + "-" + e.getProveedor());
                    }
                });
                lbTbInfo.setText("Filas: " + tbPagos.getRowCount());
                loadCmbProv(listProv);
                CustomMessages.showTemporalProgessBar(jProgressBar1, 3000);
                loadingInfo = false;
                setCursor(new Cursor(Cursor.DEFAULT_CURSOR));

            }
        };
        Thread t = new Thread(r);
        t.start();

    }

    private void loadAsyncInfo() {
        Runnable r = new Runnable() {
            @Override
            public void run() {
                loadingInfo = true;
                jProgressBar1.setVisible(true);
                jProgressBar1.setString("Cargando...");
                java.util.Date inicio = dtInicio.getDate();
                java.util.Date fin = dtFin.getDate();
                String m = cmbMoneda.getSelectedItem().toString();
                String moneda = m.equals("Todas") ? "" : m;
                int cia = cmbCia.getSelectedIndex();
                String p = cmbProv.getSelectedItem().toString();
                String prov = p.equals("Todos") ? ""
                        : p.substring(p.lastIndexOf("-") + 1, p.length());
                String nomProv = p.equals("Todos") ? ""
                        : p.substring(0, p.lastIndexOf("-"));
                System.out.println("view.ReportePagosRealizados.loadInfo()\n"
                        + "inicio: " + inicio + "\n"
                        + "fin: " + fin + "\n"
                        + "cia: " + cia + "\n"
                        + "prov " + prov
                        + "nombre prov " + nomProv);
                setCursor(new Cursor(Cursor.WAIT_CURSOR));
                view.util.JTableCommonFunctions.limpiarTabla(tbPagos);
                data.CrudPagos crd = new data.CrudPagos();
                listaPagos = crd.obtPagosPorFechas(inicio, fin, cia, prov, moneda, nomProv);
                DefaultTableModel model = (DefaultTableModel) tbPagos.getModel();

                listaPagos.forEach(e -> {
                    addRow(model, e);

                });
                lbTbInfo.setText("Filas: " + tbPagos.getRowCount());
                CustomMessages.showTemporalProgessBar(jProgressBar1, 3000);
                loadingInfo = false;
                setCursor(new Cursor(Cursor.DEFAULT_CURSOR));

            }
        };
        Thread t = new Thread(r);
        t.start();

    }

    private void loadCmbProv(ArrayList<String> p) {
        p.forEach(e -> {
            cmbProv.addItem(e);
        });
    }

    private void addRow(DefaultTableModel model, entitys.Pagos e) {
        model.addRow(new Object[]{
            e.getCia(),
            e.getRowpointer(),
            e.getFecha(),//logic.AppStaticValues.dateFormat.format(e.getFecha()),
            e.getCredito(),
            e.getProveedor(),
            e.getNombreProveedor(),
            e.getRecordDate(),//logic.AppStaticValues.dateFormat.format(e.getRecordDate()),
            e.getTipo_debito(),
            e.getTipo_credito(),
            e.getMoneda_debito(),
            e.getMonto_debito(),//logic.AppStaticValues.numberFormater.format(e.getMonto_debito()),
            e.getMonto_prov(),//logic.AppStaticValues.numberFormater.format(e.getMonto_prov()),
            e.getMonto_local(),//logic.AppStaticValues.numberFormater.format(e.getMonto_local()),
            e.getMonto_dolar(),//logic.AppStaticValues.numberFormater.format(e.getMonto_dolar()),
            e.getMonto_credito(),//logic.AppStaticValues.numberFormater.format(e.getMonto_credito())
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExpExcell;
    private javax.swing.JButton btnSerchDocNum;
    private javax.swing.JComboBox<String> cmbCia;
    private javax.swing.JComboBox<String> cmbMoneda;
    private javax.swing.JComboBox<String> cmbProv;
    private com.toedter.calendar.JDateChooser dtFin;
    private com.toedter.calendar.JDateChooser dtInicio;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbTbInfo;
    private javax.swing.JTable tbPagos;
    private javax.swing.JTextField txtDoc;
    // End of variables declaration//GEN-END:variables
}
